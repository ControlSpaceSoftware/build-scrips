[
	{
		"command": "help",
		"description": "list the commands and descriptions",
		"shellExec": "build-scripts -h"
	},
	{
		"command": "scripts",
		"description": "list the scripts to add to your package.json file",
		"shellExec": "node ./node_modules/build-scripts/scripts-info.js"
	},
	{
		"command": "resources",
		"description": "copy resources from ./src to ./lib directory",
		"shellExec": "./node_modules/gulp/bin/gulp.js copy-src-resources-to-lib --gulpfile ./node_modules/build-scripts/tasks.js"
	},
	{
		"command": "compile",
		"description": "runs babel src -o lib // compile es6 code from src/ into es5 code in lib/",
		"shellExec": "npm run resources && ./node_modules/babel-cli/bin/babel.js src --out-dir lib"
	},
	{
		"command": "test",
		"description": "runs mocha test",
		"shellExec": "./node_modules/mocha/bin/mocha --compilers js:babel-core/register $watch test",
		"options": [
			{
				"flags": "-w, --watch [watch]",
				"description": "add watch flag. usage: npm run test -- --watch"
			}
		]
	},
	{
		"command": "commit",
		"description": "runs compile, test and commit interactive so you enter commit message",
		"shellExec": "npm run compile && npm run test && git add --all . && git commit $message",
		"options": [
			{
				"flags": "-m, --message [message]",
				"description": "commit message. usage: npm run commit -- -m 'commit message'"
			}
		]
	},
	{
		"command": "patch",
		"description": "update package version",
		"shellExec": "npm version patch"
	},
	{
		"command": "push",
		"description": "git push to origin",
		"shellExec": "git push origin --follow-tags"
	},
	{
		"command": "patch-push",
		"description": "update package version and git push to origin - runs compile and test first",
		"shellExec": "npm run compile && npm run test && npm run patch && npm run push"
	},
	{
		"command": "clean",
		"description": "remove ./dist directory and ./dist.zip file",
		"shellExec": "./node_modules/gulp/bin/gulp.js clean --gulpfile ./node_modules/build-scripts/tasks.js"
	},
	{
		"command": "zip",
		"description": "zip ./dist directory into ./dist.zip file",
		"shellExec": "./node_modules/gulp/bin/gulp.js zip --gulpfile ./node_modules/build-scripts/tasks.js"
	},
	{
		"command": "package-lambda",
		"description": "package lambda function in /dist directory",
		"shellExec": "./node_modules/gulp/bin/gulp.js package --gulpfile ./node_modules/build-scripts/tasks.js"
	},
	{
		"command": "upload-lambda",
		"description": "package and upload function to aws lambda - lambda must already exist on aws",
		"shellExec": "./node_modules/gulp/bin/gulp.js upload --gulpfile ./node_modules/build-scripts/tasks.js"
	}
]